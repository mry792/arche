name: build-and-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container: conanio/gcc11

    steps:
    - name: Setup Conan Profile
      run: |
        conan profile new --detect default
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan profile update settings.build_type=${{env.BUILD_TYPE}} default
        conan profile update env.CONAN_RUN_TESTS=True default

    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        mkdir ${{github.workspace}}/build
        cd ${{github.workspace}}/build
        conan install ${{github.workspace}}

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: |
        source activate.sh
        cmake ${{github.workspace}} -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: |
        source activate.sh
        make

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: source activate.sh && ctest
